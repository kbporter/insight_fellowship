
	# my_labels_pd = pd.read_csv('/Users/katieporter/Dropbox/Insight/CT/ct_private/MVP_labels.csv')

	
	# my_features_pd = pd.read_csv('/Users/katieporter/Dropbox/Insight/CT/ct_private/MVP_features.csv')
	

#	 my_features = my_features[:, 1:]
	# my_labels = np.array(my_labels_pd['is_active'])
	# feature_names = list(my_features_pd.columns.values)
	# feature_names = feature_names[1:]
	# features_norm = (my_features - np.mean(my_features, axis=0)) / np.std(my_features, axis=0)

	# getting 50% of the data for training
	# X_train, X_valtest, y_train, y_valtest = train_test_split(features_norm, my_labels, test_size=0.5, random_state=42)

	# # splitting the remaining 50% for validation / testing 
	# X_validate, X_test, y_validate, y_test = train_test_split(X_valtest, y_valtest, test_size=0.5, random_state=42)
	# my_features_pd = pd.read_csv('/Users/katieporter/Dropbox/Insight/CT/ct_private/MVP_features.csv')

	# X_train = pd.read_csv('/Users/katieporter/Dropbox/Insight/CT/ct_private/x_train.csv')
	# y_train = pd.read_csv('/Users/katieporter/Dropbox/Insight/CT/ct_private/y_train.csv')
	# X_validate = pd.read_csv('/Users/katieporter/Dropbox/Insight/CT/ct_private/x_validate.csv')
	# y_validate = pd.read_csv('/Users/katieporter/Dropbox/Insight/CT/ct_private/y_validate.csv')

	# Random Forest
	# model2 = RandomForestClassifier()
	# model2.fit(X_train, y_train)
	# deployed_model.fit(testX, testy)

	# get the prediction + accuracy for training data
	# pred_train = deployed_model.predict(X_train)
	# accuracy_train = accuracy_score(pred_train, y_train)
	
	# print 'training accuracy is', accuracy_train, ', validation accuracy is', accuracy_validate
	# print accuracy_validate, feature_names 
